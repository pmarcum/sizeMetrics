The FITS images in this directory were generated by an IDL procedure that
called the MARX software provided by Chandra Science Center

These galaxies provide data for 4 different tests:


-------------------------------------------------------
                  T E S T   1
-------------------------------------------------------
Goal:
At what point does the algorithm "break" due to pixelation effects?

Data:
The set of images were generated by holding the total flux constant
and allowing the size of the galaxies to gradually decrease in
decrements of 10%.  By holding the flux constant, the surface brightness
essentially increases for the smaller galaxies, which could "help" the
algorithm, so what we are really testing here are the limits of
how well the size can be determined even if the brightness is high,
when pixel size becomes an increasingly dominant factor. 

Images:
All the images with "pixeffects" as the root file name are to be used
for this test.

Test implementation:
Treat all the images as if the galaxy were AT THE SAME DISTANCE (e.g.
do not correct for distance or apply regridding), and compute the
effective radius and petrosian radius for each image involved in this test.

Test results interpretation:
The relative computed sizes should follow the inputted sizes: pixeffects60.fits
should have a size that is 0.6 times that of pixeffect100.fits, and so on. 


-------------------------------------------------------
                  T E S T   2
-------------------------------------------------------
Goal:
At what point does the algorithm "break" due to degraded Signal-to-noise?

Data:
The set of images were generated by holding the galaxy size constant
and allowing the total flux of the galaxies to gradually decrease in
decrements of 10%, leading to increasingly noisier galaxies. 

Images:
All the images with "snreffects" as the root file name are to be used
for this test.

Test implementation:
Treat all the images as if the galaxy were AT THE SAME DISTANCE (e.g.
do not correct for distance or apply regridding), and compute the
effective radius and petrosian radius for each image involved in this test

Test results interpretation:
The relative computed sizes for all galaxies should be identical (in statistical sense)


-------------------------------------------------------
                  T E S T   3
-------------------------------------------------------
Goal:
At what point does combination of pixelation and fading flux break the code? 

Data:
In TEST 1, the galaxies shrank in size but total flux was held constant, leading
to high surface brightnesses in the smallest galaxies.  The data for this test
are realistic galaxies for which  the surface brightness rather than flux
is held constant. Essentially, the same galaxy is placed at increasing distances,
making the size on the detector smaller and the flux smaller, such that
the surface brightness (a distance-indep quantity) remain the same. The
galaxies are moved to distances corresponding to 2, 3, 4, 5 ... 10 times
that of the nearest galaxy. 

Images:
All the images with "disteffects" as the root file name are to be used
for this test.

Test implementation:
Treat all the images as if the galaxy were AT THE SAME DISTANCE (e.g.
do not correct for distance or apply regridding), and compute the
effective radius and petrosian radius for each image involved in this test.

Test results interpretation:
The relative computed sizes should follow the inputted sizes: disteffects60.fits
should have a size that is 0.6 times that of disteffect100.fits, and so on. 


-------------------------------------------------------
                  T E S T   4
-------------------------------------------------------
Goal:
How well does the regridding work to compensate for distance differences? 

Data:
This test uses the same data as TEST 3 but now implements the inherent
distance compensation in the algorithm

Images:
All the images with "disteffects" as the root file name are to be used
for this test.

Test implementation:
Do a couple of subtests:
   TEST 4-A: Allow the test sample to be disteffectsN.fits, where N=100,90
   TEST 4-B: Allow the test sample to be N=100,90,80
   TEST 4-C: Allow the test sample to be N=100,90,80,70
   TEST 4-D: Allow the test sample to be N=100,90,80,70,60
   TEST 4-E: Allow the test sample to be N=100,90,80,70,60,50
   TEST 4-F: Allow the test sample to be N=100,90,80,70,60,50,40
   TEST 4-G: Allow the test sample to be N=100,90,80,70,60,50,40,30
   TEST 4-H: Allow the test smaple to be N=100,90,80,70,60,50,40,30,20
   TEST 4-I: Allow the test sample to be N=100,90,80,70,60,50,40,30,20,10

and allow the code to perform the distance corrections to the maximum distance
involved in each subtest

Test results interpretation:
1) Compute the total flux for the distance-adjusted galaxies and confirm that
   they have the same flux as the most distant galaxy. Can just do this
   confirmation one time ... say, for TEST 4-I   (The rationale for this test
   is to make sure that the regridding is not throwing away flux in the center
   of the galaxy, for example, thus fundamentally altering the isophotes) 

2) Within a given sub-test, the sizes computed for the involved galaxies should
   be statistically equal.

3) Would be useful to somehow display the difference between computed distances
   within a sub-test against the subtest itself, to see if there is a point
   at which the sizes no longer agree amongst the involved galaxies because
   the distance correction is too severe, such that pixelation and/or low SNR
   seriously started impacting the results.  For example, maybe the sizes
   agreed with each other for TEST 4-A thorugh TEST 4-E, and then following
   subtests showing increasingly larger dispersion in computed sizes. 

