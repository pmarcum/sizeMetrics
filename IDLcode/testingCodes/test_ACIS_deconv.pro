PRO TEST_ACIS_DECONV
; Starts with a simulated galaxy generated by another program, then
; convolves with an ACIS PSF (I picked one that is highly asymetric,
; ie associated with an image that wsa taken at high off-axis angle).
; After convolution, perform a deconvolution, then convolve again
; and compare with the original.


; Generate a fake galaxy simply by making a 2-d gaussian

FAKE=GAUSSIAN_FUNCTION([20.,10.],WIDTH=500.,MAXIMUM=100.)

PSFNAME='/gdrive/Pam/ACIS_Mar2017/PSF_soft_CSC/acisf07770_000N001_r0083s_psf3.fits'

; Read in the PSF file
FXREAD,PSFNAME,PSF

; Force the PSF to be unity when integrated over all space
PSF=PSF/TOTAL(PSF)

; Now perform the convolution
ORIG=CONVOL_FFT(FAKE,PSF)

; Now play like this image is the one that we started with, so do a
; deconvolution
IMG=FAKE
FOR J=1,50 DO MAX_LIKELIHOOD,IMG,PSF,DECONV,RECONV

; compare to the psf that was original read in
IN=WHERE(FAKE NE 0.)
RESID1=FAKE*0.-9999
RESID1(IN)=((FAKE(IN)-DECONV(IN))/FAKE(IN))*100.

; Now do a convolution of the deconvolution and compare to ORIG
IMG=CONVOL_FFT(DECONV,PSF)
IN=WHERE(ORIG NE 0.)
RESID2=ORIG*0.-9999
RESID2(IN)=((ORIG(IN)-IMG(IN))/ORIG(IN))*100.

; Save everything to file
WRITEFITS,'fakegal.fits',FAKE
WRITEFITS,'orig.fits',ORIG
WRITEFITS,'deconv.fits',DECONV
WRITEFITS,'deconv_fakegal.fits',RESID1
WRITEFITS,'smthdeconv_orig.fits',RESID2


END
